#compdef mediafilesegmenter
# ------------------------------------------------------------------------------
# MIT License
#
# Copyright 2022 Shohei Yoshida
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ------------------------------------------------------------------------------
# Description
# -----------
#
#  Completion script for mediafilesegmenter 1.17
#
# ------------------------------------------------------------------------------
# Authors
# -------
#
#  * Shohei Yoshida (https://github.com/syohex)
#
# ------------------------------------------------------------------------------

_arguments \
  '(-b --base-url)'{-b,--base-url}'[Base url]:url' \
  '(-t --target-duration)'{-t,--target-duration=}'[Target duration for each segment]:duration' \
  '(-f --file-base)'{-f,--file-base=}'[Path at which to store index and media files]: :_files -/' \
  '(-F --meta-file)'{-F,--meta-file=}'[Meta data file to load for each segment]: :_files' \
  '(-y --meta-type)'{-y,--meta-type=}'[Meta  data format for metadata file to]: :(id3 private picture)' \
  '(-M --meta-macro-file)'{-M,--meta-macro-file=}'[Macro file containing the list of metadata entries to inject in the stream]: :_files' \
  '(-i --index-file)'{-i,--index-file=}'[Index file name(default prog_index.m3u8)]:name' \
  '(-B --base-media-file-name)'{-B,--base-media-file-name=}'[Base media file name(default fileSequence)]:name' \
  '(-k --encrypt-key-file)'{-k,--encrypt-key-file=}'[Encryption key location]: :_files' \
  '(-K --encrypt-key-url)'{-K,--encrypt-key-url=}'[URL to insert into playlist]:url' \
  '(-S --stream-encrypt)'{-S,--stream-encrypt}'[Use elementary stream encryption]' \
  '(-P --streaming-key-delivery)'{-P,--streaming-key-delivery}'[Use FairPlay Streaming key format]' \
  '(-J --encrypt-iv)'{-J,--encrypt-iv=}'[Specify method of generation of IV for encryption]: :(random sequence)' \
  '-key-rotation-period=[Rotates key every <period> segments(Default is 4 hours)]:period' \
  '-encrypt-rotate-iv-mbytes=[Number of megabytes to rotate the IV(Default 50)]:num' \
  '(-n --base-encrypt-key-name)'{-n,--base-encrypt-key-name=}'[Crypt key file name]:' \
  '(-H --hdcp-level)'{-H,--hdcp-level=}'[Signaling HDCP level]: :(none type-0 type-1)' \
  '(-l --log-file)'{-l,--log-file=}'[Enable log file]: :_files' \
  '(-q --quiet)'{-q,--quiet}'[Only output errors]' \
  '(-a --audio-only)'{-a,--audio-only}'[Only use audio from the stream]' \
  '(-A --video-only)'{-A,--video-only}'[Only use video/closed caption tracks]' \
  '--no-floating-point-duration[Do not use float point durations]' \
  '(-V --validate-files)'{-V,--validate-files}'[Validate input file]' \
  '(-z --iframe-index-file)'{-z,--iframe-index-file=}'[Create I-frame index file with name(default iframe_index.m3u8)]:name' \
  '(-r --iso-fragmented)'{-r,--iso-fragmented}'[Output ISO fragmented format instead of transport stream]' \
  '--score=[Specify a positive decimal-floating point value of the SCORE attribute]:score' \
  '(-s --output-single-file)'{-s,--output-single-file}'[Output all segments contained in 1 file]' \
  '-key-format-versions=[Specify the value of KEYFORMATVERSIONS attribute]:version' \
  '-start-segments-with-iframe[Start all segments with I-frames]' \
  '(- *)'{-v,--version}'[Show version number]' \
  '(- *)'{-h,--help}'[Show help]' \
  '*:files:_files'

# Local Variables:
# mode: Shell-Script
# sh-indentation: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# End:
# vim: ft=zsh sw=2 ts=2 et
